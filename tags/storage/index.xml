<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Storage on bitPhile</title><link>https://nitinsharmacs.github.io/tags/storage/</link><description>Recent content in Storage on bitPhile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 12 Mar 2023 10:38:56 +0530</lastBuildDate><atom:link href="https://nitinsharmacs.github.io/tags/storage/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Volume</title><link>https://nitinsharmacs.github.io/tech/docker/docker-volume/</link><pubDate>Sun, 12 Mar 2023 10:38:56 +0530</pubDate><guid>https://nitinsharmacs.github.io/tech/docker/docker-volume/</guid><description>&lt;h1 id="understanding-docker-volume-thoroughly">Understanding Docker Volume Thoroughly&lt;/h1>
&lt;h2 id="agenda">Agenda&lt;/h2>
&lt;ol>
&lt;li>Abstract&lt;/li>
&lt;li>Container layer and its data on docker host machine&lt;/li>
&lt;li>What are the flaws of storing data in the container layer?&lt;/li>
&lt;li>What is the solution?&lt;/li>
&lt;li>Using docker volume&lt;/li>
&lt;li>Conclusion&lt;/li>
&lt;/ol>
&lt;h2 id="abstract">Abstract&lt;/h2>
&lt;p>A Docker container is an independent process comprising the application and its dependencies. Container has its processes, file system, and networks independent of the host machine.&lt;/p>
&lt;p>Creating a resource in the running container stores that resource in the Read-Write layer or Container layer. This is a temporary storage mechanism. It is accessible until the container is running. Once the container is removed, all the data goes.&lt;/p></description></item></channel></rss>