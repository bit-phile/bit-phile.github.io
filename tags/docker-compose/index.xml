<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Docker-Compose on bitPhile</title><link>https://nitinsharmacs.github.io/tags/docker-compose/</link><description>Recent content in Docker-Compose on bitPhile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 02 Apr 2023 12:36:36 +0530</lastBuildDate><atom:link href="https://nitinsharmacs.github.io/tags/docker-compose/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Compose Todo App</title><link>https://nitinsharmacs.github.io/tech/docker/docker-compose-todo-app/</link><pubDate>Sun, 02 Apr 2023 12:36:36 +0530</pubDate><guid>https://nitinsharmacs.github.io/tech/docker/docker-compose-todo-app/</guid><description>&lt;p>Greetings, esteemed readers! It is an absolute pleasure to see you all here. I trust that each one of you is in the pink of health and high spirits. In this post, we are going to containerize our todo application using docker compose. If you want to learn about docker compose, refer my post on &lt;a href="https://nitinsharmacs.github.io/tech/docker/docker-compose">Docker Compose&lt;/a>. Let&amp;rsquo;s hit the road!&lt;/p>
&lt;h2 id="what-is-there-to-cover">What is there to Cover?&lt;/h2>
&lt;p>We will be covering the following sections here.&lt;/p></description></item><item><title>Introduction to Docker Compose</title><link>https://nitinsharmacs.github.io/tech/docker/docker-compose/</link><pubDate>Sun, 26 Mar 2023 08:59:38 +0530</pubDate><guid>https://nitinsharmacs.github.io/tech/docker/docker-compose/</guid><description>&lt;p>Hello people! Good to see you here. Today we would be learning about docker compose, what is it, why we need it, and its examples. Let&amp;rsquo;s begin.&lt;/p>
&lt;h2 id="agenda">Agenda&lt;/h2>
&lt;ol>
&lt;li>Current Scenario&lt;/li>
&lt;li>What is docker-compose?&lt;/li>
&lt;li>How does docker compose change the current scenario?&lt;/li>
&lt;li>Defining Services&lt;/li>
&lt;li>Volume and Bind mounts&lt;/li>
&lt;li>Networking&lt;/li>
&lt;li>Environment Variables&lt;/li>
&lt;li>Conclusion&lt;/li>
&lt;/ol>
&lt;h2 id="current-scenario">Current Scenario&lt;/h2>
&lt;p>A single application comprises containers for different services responsible for their respective tasks. For example, a backend service, a database service to manage data, a frontend for the app, and so on. All of these services need to be in the same network to communicate with each other. I have explained docker networking in my post &lt;a href="https://nitinsharmacs.github.io/tech/docker/docker-networking">Docker Networking&lt;/a>.&lt;/p></description></item></channel></rss>