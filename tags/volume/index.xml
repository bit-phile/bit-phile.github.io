<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>volume on bitPhile</title><link>https://bit-phile.github.io/tags/volume/</link><description>Recent content in volume on bitPhile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 12 Mar 2023 10:38:56 +0530</lastBuildDate><atom:link href="https://bit-phile.github.io/tags/volume/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Volume</title><link>https://bit-phile.github.io/tech/docker/docker-volume/</link><pubDate>Sun, 12 Mar 2023 10:38:56 +0530</pubDate><guid>https://bit-phile.github.io/tech/docker/docker-volume/</guid><description>Understanding Docker Volume Thoroughly Agenda Abstract Container layer and its data on docker host machine What are the flaws of storing data in the container layer? What is the solution? Using docker volume Conclusion Abstract A Docker container is an independent process comprising the application and its dependencies. Container has its processes, file system, and networks independent of the host machine.
Creating a resource in the running container stores that resource in the Read-Write layer or Container layer.</description></item></channel></rss>