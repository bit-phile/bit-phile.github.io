<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>socket on bitPhile</title><link>https://nitinsharmacs.github.io/tags/socket/</link><description>Recent content in socket on bitPhile</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 15 Aug 2023 13:49:50 +0530</lastBuildDate><atom:link href="https://nitinsharmacs.github.io/tags/socket/index.xml" rel="self" type="application/rss+xml"/><item><title>Chat App in Scala Armeria</title><link>https://nitinsharmacs.github.io/tech/programming/scala/chat-app-in-scala-armeria/</link><pubDate>Tue, 15 Aug 2023 13:49:50 +0530</pubDate><guid>https://nitinsharmacs.github.io/tech/programming/scala/chat-app-in-scala-armeria/</guid><description>Contents Abstract What is Armeria and its features? Project details Project setup requirements Setting up Armeria and service handler Setting up the web socket handler Show example in the browser console Socket service for frontend Code snippet of the chat screen Working example Screenshots etc Conclusion Acknowledgements References Abstract As a part of E4R (Engineering for Research) retreat Hackathon, we explored Armeria and created a small PoC single group chat application using HTTP request polling and websockets.</description></item></channel></rss>